(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(n,e,t){"use strict";var i=t(170),s=t.n(i),r=t(174),o=t.n(r),a=t(175),l=t.n(a),c=t(176),h=t.n(c),u=t(22),d=t.n(u),m=t(18),p=t.n(m),f=t(19),v=t.n(f),b=t(20),g=t.n(b),w=t(21),A=t.n(w),y=t(0),k=t.n(y),C=t(43),B=t.n(C),E=t(168),V=t.n(E),_=t(177),M=t.n(_),S=t(173),D=t.n(S),N=t(23),I=t.n(N),x=t(178),T=t(1),L=t.n(T),O=t(172),j=t.n(O),R=(t(179),t(180),t(181),t(182),function(n){function e(){return p()(this,e),g()(this,(e.__proto__||d()(e)).apply(this,arguments))}return A()(e,n),v()(e,[{key:"componentDidMount",value:function(){var n=this,e=this.props,t=e.onChange,i=e.value;this.cm=j()(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(i),this.cm.on("changes",function(e){t&&(clearTimeout(n.timeout),n.timeout=setTimeout(function(){t(e.getValue())},300))})}},{key:"render",value:function(){var n=this;return k.a.createElement("div",{className:"editor",ref:function(e){n.editor=e}})}}]),e}(y.Component)),H=R;R.propTypes={onChange:L.a.func,value:L.a.string},R.defaultProps={onChange:function(){},value:""};var U=function(n){function e(n){p()(this,e);var t=g()(this,(e.__proto__||d()(e)).call(this,n));return t.playerId=""+parseInt(1e9*Math.random(),10).toString(36),t.document=t.props.children.match(/([^]*)\n?(```[^]+```)/),t.description=V()(t.document[1]),t.source=t.document[2].match(/```(.*)\n?([^]+)```/),t.state={showBlock:!1},t.blockControl=t.blockControl.bind(t),t}return A()(e,n),v()(e,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.containerElem&&B.a.unmountComponentAtNode(this.containerElem)}},{key:"blockControl",value:function(){this.setState({showBlock:!this.state.showBlock})}},{key:"renderSource",value:function(n){var e=this;Promise.all([t.e(44),t.e(42)]).then(t.bind(null,316)).then(function(n){var t=["context","React","ReactDOM"],i=[e,k.a,B.a];return I()(n).forEach(function(e){t.push(e),i.push(n[e])}),{args:t,argv:i}}).then(function(t){var i=t.args,s=t.argv,r=Object(x.transform)("\n        class Demo extends React.Component {\n          "+n+"\n        }\n\n        ReactDOM.render(<Demo {...context.props} />, document.getElementById('"+e.playerId+"'))\n      ",{presets:["es2015","react"]}).code;i.push(r),(new(Function.prototype.bind.apply(Function,[null].concat(D()(i))))).apply(void 0,D()(s)),e.source[2]=n}).catch(function(n){0})}},{key:"render",value:function(){var n=this;return k.a.createElement("div",{className:"demo-block demo-box demo-"+this.props.name},k.a.createElement("div",{className:"source",id:this.playerId,ref:function(e){n.containerElem=e}}),this.state.showBlock&&k.a.createElement("div",{className:"meta"},this.description&&k.a.createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:this.description}}),k.a.createElement(H,{value:this.source[2],onChange:function(e){return n.renderSource(e)}})),k.a.createElement("div",{className:"demo-block-control",onClick:this.blockControl},this.state.showBlock?k.a.createElement("span",null,k.a.createElement("i",{className:"el-icon-caret-top"}),"隐藏"):k.a.createElement("span",null,k.a.createElement("i",{className:"el-icon-caret-bottom"}),"展开")))}}]),e}(k.a.Component),F=function(n){function e(n){p()(this,e);var t=g()(this,(e.__proto__||d()(e)).call(this,n));return t.nodeList=[],t.components=new h.a,t.renderer=new V.a.Renderer,t.renderer.table=function(n,e){return'<table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table>"},t}return A()(e,n),v()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){B.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var i,s=o()(this.components);!(n=(i=s.next()).done);n=!0){var r=i.value,a=l()(r,2),c=a[0],h=a[1],u=document.getElementById(c);this.nodeList.push(u),u instanceof HTMLElement&&B.a.render(h,u)}}catch(n){e=!0,t=n}finally{try{!n&&s.return&&s.return()}finally{if(e)throw t}}M.a.highlightAll()}},{key:"render",value:function(){var n=this,e=this.document();if("string"==typeof e){this.components.clear();var t=V()(e.replace(/:::\s?demo\s?([^]+?):::/g,function(e,t,i){var r=i.toString(36);return n.components.set(r,k.a.createElement(U,s()({name:n.constructor.name.toLowerCase()},n.props),t)),"<div id="+r+"></div>"}),{renderer:this.renderer});return k.a.createElement("div",{dangerouslySetInnerHTML:{__html:t}})}return k.a.createElement("span",null)}}]),e}(k.a.Component);e.a=F},242:function(n,e){n.exports="## Alert 警告框\n\n用于展示重要的提示信息。\n\n### 基本用法\n\n弹窗形式，默认有一个关闭按钮。\n\n::: demo Alert 组件提供四种主题，由`theme`属性指定，默认值为`info`。通过`message`属性设置显示文本，默认带icon。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertVisible: false,\n    };\n    this.showAlert = this.showAlert.bind(this);\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n\n  showAlert() {\n    this.setState({\n      alertVisible: true,\n    });\n  }\n\n  hideAlert() {\n    this.setState({\n      alertVisible: false,\n    });\n  }\n\n  render() {\n    const { alertVisible } = this.state;\n    return (\n      <div>\n        <Button theme=\"warning\" onClick={this.showAlert}>警告</Button>\n        <Alert\n          visible={alertVisible}\n          theme=\"warning\"\n          onClose={this.hideAlert}\n          message='这是一个警告框'\n        />\n      </div>\n    );\n  }\n```\n:::\n\n### 自定义关闭按钮\n\n自定义关闭按钮的几种用法。\n\n::: demo 可以设置是否可关闭，关闭按钮的文本以及关闭时的回调函数。`closable`属性决定是否可关闭，默认为`true`。另外可以设置`closeText`来替代默认的'关闭'文本。设置`onClose`事件来设置关闭时的回调，通过`visible`属性来控制弹窗的显示和隐藏。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertAVisible: false,\n      alertBVisible: false,\n      alertCVisible: false,\n    };\n  }\n\n  showAlert(which) {\n    this.setState({\n      [`alert${which}Visible`]: true,\n    });\n  }\n\n  hideAlert(which) {\n    this.setState({\n      [`alert${which}Visible`]: false,\n    });\n  }\n\n  render() {\n    const { alertAVisible, alertBVisible, alertCVisible } = this.state;\n    return (\n      <div>\n        <Button theme=\"warning\" onClick={() => this.showAlert('A')}>不可关闭</Button>\n        <Button theme=\"success\" onClick={() => this.showAlert('B')}>自定义按钮文本</Button>\n        <Button theme=\"error\" onClick={() => this.showAlert('C')}>回调演示</Button>\n        <Alert\n          visible={alertAVisible}\n          theme=\"warning\"\n          closable={false}\n          message='不可关闭警告框'\n        />\n        <Alert\n          visible={alertBVisible}\n          theme=\"success\"\n          onClose={() => this.hideAlert('B')}\n          message='自定义按钮文本'\n          closeText=\"知道了\"\n        />\n        <Alert\n          visible={alertCVisible}\n          theme=\"warning\"\n          onClose={() => {\n            this.hideAlert('C');\n            this.showAlert('B');\n          }}\n          message='这是回调演示'\n        />\n      </div>\n    );\n  }\n```\n:::\n\n### 隐藏 icon\n\n根据业务需要可隐藏表示状态的icon。\n\n::: demo 通过设置`hideIcon`属性来隐藏 icon。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertVisible: false,\n    };\n    this.showAlert = this.showAlert.bind(this);\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n\n  showAlert() {\n    this.setState({\n      alertVisible: true,\n    });\n  }\n\n  hideAlert() {\n    this.setState({\n      alertVisible: false,\n    });\n  }\n\n  render() {\n    const { alertVisible } = this.state;\n    return (\n      <div>\n        <Button theme=\"info\" onClick={this.showAlert}>隐藏icon</Button>\n        <Alert\n          visible={alertVisible}\n          theme=\"info\"\n          onClose={this.hideAlert}\n          message='隐藏icon演示'\n          hideIcon\n        />\n      </div>\n    );\n  }\n```\n:::\n\n\n### Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| message | 内容文本 | string | — | '' |\n| theme | 主题 | string | success/warning/info/error | info |\n| width | 弹窗宽度 | number | — | 270 |\n| className | 弹窗类名 | string | — | '' |\n| closable | 是否可关闭 | boolean | — | true |\n| closeText | 关闭按钮自定义文本 | string | — | — |\n| hideIcon | 是否隐藏图标 | boolean | — | false |\n\n\n### Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onClose | 关闭alert时触发的事件 | — |\n"},80:function(n,e,t){"use strict";t.r(e);var i=t(22),s=t.n(i),r=t(18),o=t.n(r),a=t(19),l=t.n(a),c=t(20),h=t.n(c),u=t(21),d=t.n(u),m=function(n){function e(){return o()(this,e),h()(this,(e.__proto__||s()(e)).apply(this,arguments))}return d()(e,n),l()(e,[{key:"document",value:function(){return t(242)}}]),e}(t(169).a);e.default=m}}]);