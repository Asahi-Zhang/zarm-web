webpackJsonp([25],{132:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=t(65),i=t.n(s),l=t(66),r=t.n(l),o=t(67),h=t.n(o),a=t(68),c=t.n(a),u=t(69),b=t.n(u),A=t(265),d=(t(419),t(267),t(270),function(n){function e(){return r()(this,e),c()(this,(e.__proto__||i()(e)).apply(this,arguments))}return b()(e,n),h()(e,[{key:"document",value:function(){return t(424)}}]),e}(A.a));e.default=d},419:function(n,e,t){"use strict";var s=t(420);t.n(s),t(284)},420:function(n,e){},424:function(n,e){n.exports="## Alert 警告框\n\n用于展示重要的提示信息。\n\n### 基本用法\n\n弹窗形式，默认有一个关闭按钮。\n\n::: demo Alert 组件提供四种主题，由`theme`属性指定，默认值为`info`。通过`message`属性设置显示文本，默认带icon。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertVisible: false,\n    };\n    this.showAlert = this.showAlert.bind(this);\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n\n  showAlert() {\n    this.setState({\n      alertVisible: true,\n    });\n  }\n\n  hideAlert() {\n    this.setState({\n      alertVisible: false,\n    });\n  }\n\n  render() {\n    const { alertVisible } = this.state;\n    return (\n      <div>\n        <Button theme=\"warning\" onClick={this.showAlert}>警告</Button>\n        <Alert\n          visible={alertVisible}\n          theme=\"warning\"\n          onClose={this.hideAlert}\n          message='这是一个警告框'\n        />\n      </div>\n    );\n  }\n```\n:::\n\n### 自定义关闭按钮\n\n自定义关闭按钮的几种用法。\n\n::: demo 可以设置是否可关闭，关闭按钮的文本以及关闭时的回调函数。`closable`属性决定是否可关闭，默认为`true`。另外可以设置`closeText`来替代默认的'关闭'文本。设置`onClose`事件来设置关闭时的回调，通过`visible`属性来控制弹窗的显示和隐藏。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertAVisible: false,\n      alertBVisible: false,\n      alertCVisible: false,\n    };\n  }\n\n  showAlert(which) {\n    this.setState({\n      [`alert${which}Visible`]: true,\n    });\n  }\n\n  hideAlert(which) {\n    this.setState({\n      [`alert${which}Visible`]: false,\n    });\n  }\n\n  render() {\n    const { alertAVisible, alertBVisible, alertCVisible } = this.state;\n    return (\n      <div>\n        <Button theme=\"warning\" onClick={() => this.showAlert('A')}>不可关闭</Button>\n        <Button theme=\"success\" onClick={() => this.showAlert('B')}>自定义按钮文本</Button>\n        <Button theme=\"error\" onClick={() => this.showAlert('C')}>回调演示</Button>\n        <Alert\n          visible={alertAVisible}\n          theme=\"warning\"\n          closable={false}\n          message='不可关闭警告框'\n        />\n        <Alert\n          visible={alertBVisible}\n          theme=\"success\"\n          onClose={() => this.hideAlert('B')}\n          message='自定义按钮文本'\n          closeText=\"知道了\"\n        />\n        <Alert\n          visible={alertCVisible}\n          theme=\"warning\"\n          onClose={() => {\n            this.hideAlert('C');\n            this.showAlert('B');\n          }}\n          message='这是回调演示'\n        />\n      </div>\n    );\n  }\n```\n:::\n\n### 隐藏 icon\n\n根据业务需要可隐藏表示状态的icon。\n\n::: demo 通过设置`hideIcon`属性来隐藏 icon。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertVisible: false,\n    };\n    this.showAlert = this.showAlert.bind(this);\n    this.hideAlert = this.hideAlert.bind(this);\n  }\n\n  showAlert() {\n    this.setState({\n      alertVisible: true,\n    });\n  }\n\n  hideAlert() {\n    this.setState({\n      alertVisible: false,\n    });\n  }\n\n  render() {\n    const { alertVisible } = this.state;\n    return (\n      <div>\n        <Button theme=\"info\" onClick={this.showAlert}>隐藏icon</Button>\n        <Alert\n          visible={alertVisible}\n          theme=\"info\"\n          onClose={this.hideAlert}\n          message='隐藏icon演示'\n          hideIcon\n        />\n      </div>\n    );\n  }\n```\n:::\n\n\n### Attributes\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| message | 内容文本 | string | — | '' |\n| theme | 主题 | string | success/warning/info/error | info |\n| width | 弹窗宽度 | number | — | 270 |\n| className | 弹窗类名 | string | — | '' |\n| closable | 是否可关闭 | boolean | — | true |\n| closeText | 关闭按钮自定义文本 | string | — | — |\n| hideIcon | 是否隐藏图标 | boolean | — | false |\n\n\n### Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onClose | 关闭alert时触发的事件 | — |\n"}});