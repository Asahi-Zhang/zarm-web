(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{170:function(e,n,t){"use strict";t(65)},172:function(e,n,t){"use strict";var u=t(173),o=t.n(u),r=t(177),i=t.n(r),m=t(179),s=t.n(m),a=t(180),M=t.n(a),l=t(22),c=t.n(l),d=t(18),I=t.n(d),p=t(19),h=t.n(p),y=t(20),b=t.n(y),f=t(21),v=t.n(f),k=t(0),S=t.n(k),g=t(43),w=t.n(g),C=t(171),E=t.n(C),K=t(181),_=t.n(K),O=t(176),D=t.n(O),x=t(23),N=t.n(x),j=t(182),B=t(1),L=t.n(B),A=t(175),T=t.n(A),R=(t(183),t(184),t(185),t(186),t(187),function(e){function n(){return I()(this,n),b()(this,(n.__proto__||c()(n)).apply(this,arguments))}return v()(n,e),h()(n,[{key:"componentDidMount",value:function(){var e=this,n=this.props,t=n.onChange,u=n.value;this.cm=T()(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(u),this.cm.on("changes",function(n){t&&(clearTimeout(e.timeout),e.timeout=setTimeout(function(){t(n.getValue())},300))})}},{key:"render",value:function(){var e=this;return S.a.createElement("div",{className:"editor",ref:function(n){e.editor=n}})}}]),n}(k.Component)),z=R;R.propTypes={onChange:L.a.func,value:L.a.string},R.defaultProps={onChange:function(){},value:""};var H=function(e){function n(e){I()(this,n);var t=b()(this,(n.__proto__||c()(n)).call(this,e));return t.playerId=""+parseInt(1e9*Math.random(),10).toString(36),t.document=t.props.children.match(/([^]*)\n?(```[^]+```)/),t.description=E()(t.document[1]),t.source=t.document[2].match(/```(.*)\n?([^]+)```/),t.state={showBlock:!1},t.blockControl=t.blockControl.bind(t),t}return v()(n,e),h()(n,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.containerElem&&w.a.unmountComponentAtNode(this.containerElem)}},{key:"blockControl",value:function(){this.setState({showBlock:!this.state.showBlock})}},{key:"renderSource",value:function(e){var n=this;Promise.all([t.e(44),t.e(42)]).then(t.bind(null,368)).then(function(e){var t=["context","React","ReactDOM"],u=[n,S.a,w.a];return N()(e).forEach(function(n){t.push(n),u.push(e[n])}),{args:t,argv:u}}).then(function(t){var u=t.args,o=t.argv,r=Object(j.transform)("\n        class Demo extends React.Component {\n          "+e+"\n        }\n\n        ReactDOM.render(<Demo {...context.props} />, document.getElementById('"+n.playerId+"'))\n      ",{presets:["es2015","react"]}).code;u.push(r),(new(Function.prototype.bind.apply(Function,[null].concat(D()(u))))).apply(void 0,D()(o)),n.source[2]=e}).catch(function(e){0})}},{key:"render",value:function(){var e=this;return S.a.createElement("div",{className:"demo-block demo-box demo-"+this.props.name},S.a.createElement("div",{className:"source",id:this.playerId,ref:function(n){e.containerElem=n}}),this.state.showBlock&&S.a.createElement("div",{className:"meta"},this.description&&S.a.createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:this.description}}),S.a.createElement(z,{value:this.source[2],onChange:function(n){return e.renderSource(n)}})),S.a.createElement("div",{className:"demo-block-control",onClick:this.blockControl},this.state.showBlock?S.a.createElement("span",null,S.a.createElement("i",{className:"el-icon-caret-top"}),"隐藏"):S.a.createElement("span",null,S.a.createElement("i",{className:"el-icon-caret-bottom"}),"展开")))}}]),n}(S.a.Component),U=function(e){function n(e){I()(this,n);var t=b()(this,(n.__proto__||c()(n)).call(this,e));return t.nodeList=[],t.components=new M.a,t.renderer=new E.a.Renderer,t.renderer.table=function(e,n){return'<table class="grid"><thead>'+e+"</thead><tbody>"+n+"</tbody></table>"},t}return v()(n,e),h()(n,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(e){w.a.unmountComponentAtNode(e)})}},{key:"renderDOM",value:function(){var e=!0,n=!1,t=void 0;try{for(var u,o=i()(this.components);!(e=(u=o.next()).done);e=!0){var r=u.value,m=s()(r,2),a=m[0],M=m[1],l=document.getElementById(a);this.nodeList.push(l),l instanceof HTMLElement&&w.a.render(M,l)}}catch(e){n=!0,t=e}finally{try{!e&&o.return&&o.return()}finally{if(n)throw t}}_.a.highlightAll()}},{key:"render",value:function(){var e=this,n=this.document();if("string"==typeof n){this.components.clear();var t=E()(n.replace(/:::\s?demo\s?([^]+?):::/g,function(n,t,u){var r=u.toString(36);return e.components.set(r,S.a.createElement(H,o()({name:e.constructor.name.toLowerCase()},e.props),t)),"<div id="+r+"></div>"}),{renderer:this.renderer});return S.a.createElement("div",{dangerouslySetInnerHTML:{__html:t}})}return S.a.createElement("span",null)}}]),n}(S.a.Component);n.a=U},192:function(e,n,t){"use strict";t(170),t(202)},303:function(e,n){e.exports='## Menu 导航菜单\n为侧边栏或下拉框等组件提供导航菜单列表。\n\n### 水平导航\n\n设置mode属性为horizontal\n\n:::demo 可以给每一个Menu.Item设置key，并通过defaultSelectedKeys设置默认值\n```js\n  render() {\n    return (\n      <Menu mode="horizontal" defaultSelectedKeys={[\'a\']}>\n        <Menu.Item key="a">意健险</Menu.Item>\n        <Menu.Item key="b">健康险个险</Menu.Item>\n        <Menu.Item key="c">雇主责任险</Menu.Item>\n        <Menu.Item key="d">运营后台管理</Menu.Item>\n        <Menu.Item key="e">公共功能</Menu.Item>\n        <Menu.Item key="f">询报价</Menu.Item>\n      </Menu>\n    )\n  }\n```\n:::\n\n### 侧边导航\n\n默认的inline菜单模式\n\n:::demo\n```js\n  render() {\n    const wrapperStyle = {\n      width: 238,\n      border: \'1px solid #e3e3e3\'\n    }\n    return (\n      <div style={wrapperStyle}>\n        <Menu>\n          <Menu.SubMenu title="新契约">\n            <Menu.Item>投保单复核</Menu.Item>\n            <Menu.Item>在线投保单管理</Menu.Item>\n            <Menu.Item>投保单录入</Menu.Item>\n            <Menu.Item>新增计划</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="核保">\n            <Menu.Item>核保权限定义</Menu.Item>\n            <Menu.Item>核保权限分配</Menu.Item>\n            <Menu.Item>规则配置</Menu.Item>\n            <Menu.Item>人工核保</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="批改">\n            <Menu.Item>批改新增</Menu.Item>\n            <Menu.Item>批改复核</Menu.Item>\n            <Menu.Item>批改回退</Menu.Item>\n            <Menu.Item>批改共享池</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </div>\n    )\n  }\n```\n:::\n\n### 多层嵌套\n\nSubMenu内可以继续嵌套SubMenu\n\n:::demo 理赔子菜单下有理赔工作流子菜单\n```js\n  render() {\n    const wrapperStyle = {\n      width: 238,\n      border: \'1px solid #e3e3e3\'\n    }\n    return (\n      <div style={wrapperStyle}>\n        <Menu>\n          <Menu.SubMenu title="理赔">\n            <Menu.Item>报案</Menu.Item>\n            <Menu.Item>任务分配</Menu.Item>\n            <Menu.SubMenu title="理赔工作流">\n              <Menu.Item>休假维护</Menu.Item>\n              <Menu.Item>时效维护</Menu.Item>\n            </Menu.SubMenu>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="新契约">\n            <Menu.Item>投保单复核</Menu.Item>\n            <Menu.Item>在线投保单管理</Menu.Item>\n            <Menu.Item>投保单录入</Menu.Item>\n            <Menu.Item>新增计划</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="核保">\n            <Menu.Item>核保权限定义</Menu.Item>\n            <Menu.Item>核保权限分配</Menu.Item>\n            <Menu.Item>规则配置</Menu.Item>\n            <Menu.Item>人工核保</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="批改">\n            <Menu.Item>批改新增</Menu.Item>\n            <Menu.Item>批改复核</Menu.Item>\n            <Menu.Item>批改回退</Menu.Item>\n            <Menu.Item>批改共享池</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </div>\n    )\n  }\n```\n:::\n\n### 深色主题\n\n通过theme属性设置菜单颜色主题\n\n:::demo\n```js\n  render() {\n    const wrapperStyle = {\n      width: 238,\n      border: \'1px solid #e3e3e3\',\n      backgroundColor: \'#001529\'\n    }\n    return (\n      <div style={wrapperStyle}>\n        <Menu theme="dark">\n          <Menu.SubMenu title="新契约">\n            <Menu.Item>投保单复核</Menu.Item>\n            <Menu.Item>在线投保单管理</Menu.Item>\n            <Menu.Item>投保单录入</Menu.Item>\n            <Menu.Item>新增计划</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="核保">\n            <Menu.Item>核保权限定义</Menu.Item>\n            <Menu.Item>核保权限分配</Menu.Item>\n            <Menu.Item>规则配置</Menu.Item>\n            <Menu.Item>人工核保</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="批改">\n            <Menu.Item>批改新增</Menu.Item>\n            <Menu.Item>批改复核</Menu.Item>\n            <Menu.Item>批改回退</Menu.Item>\n            <Menu.Item>批改共享池</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </div>\n    )\n  }\n```\n:::\n\n### 只展开一个子菜单\n\n可以通过openKeys属性控制展开项\n\n:::demo 可通过defaultOpenKeys设置默认展开项，通过onOpenChange回调设置openKeys\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      openKeys: [\'a\']\n    }\n  }\n  onOpenChange(openKeys) {\n    const lastKey = openKeys.pop();\n    this.setState({\n      openKeys: [lastKey]\n    });\n  }\n  render() {\n    const wrapperStyle = {\n      width: 238,\n      border: \'1px solid #e3e3e3\',\n      backgroundColor: \'#001529\'\n    }\n    const { openKeys } = this.state;\n    return (\n      <div style={wrapperStyle}>\n        <Menu\n          theme="dark"\n          openKeys={openKeys}\n          defaultOpenKeys={[\'a\']}\n          onOpenChange={(keys) => this.onOpenChange(keys)}\n        >\n          <Menu.SubMenu title="新契约" key="a">\n            <Menu.Item>投保单复核</Menu.Item>\n            <Menu.Item>在线投保单管理</Menu.Item>\n            <Menu.Item>投保单录入</Menu.Item>\n            <Menu.Item>新增计划</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="核保" key="b">\n            <Menu.Item>核保权限定义</Menu.Item>\n            <Menu.Item>核保权限分配</Menu.Item>\n            <Menu.Item>规则配置</Menu.Item>\n            <Menu.Item>人工核保</Menu.Item>\n          </Menu.SubMenu>\n          <Menu.SubMenu title="批改" key="c">\n            <Menu.Item>批改新增</Menu.Item>\n            <Menu.Item>批改复核</Menu.Item>\n            <Menu.Item>批改回退</Menu.Item>\n            <Menu.Item>批改共享池</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </div>\n    )\n  }\n```\n:::\n\n\n### Menu Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| mode   |  菜单模式  | string |  horizontal / inline     |    inline   |\n| theme   |  颜色主题 | string |  light / dark    |    dark   |\n| defaultOpenKeys   |  默认打开的子菜单keys | string[] |  -    |    []   |\n| defaultSelectedKeys   |  默认选中的菜单项keys | string[] |  -    |    []   |\n| openKeys   |  打开的子菜单keys | string[] |  -    |    -   |\n| selectedKeys   |  选中的菜单项keys | string[] |  -    |    -   |\n| inlineIndent   | inline模式菜单每一级子菜单的缩进距离 | number |  -    |    24   |\n\n\n### Menu Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onOpenChange | 子菜单展开收缩时候触发的事件 | openKeys |\n\n\n### Menu.SubMenu Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| title   |  子菜单标题  | string |  -     |    -   |\n| key   |  子菜单的key值 | string |  -   |    -  |\n\n\n### Menu.Item Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| disabled   |  是否禁用  | boolean |  -   |   false   |\n| key   |  菜单项的key值 | string |  -   |    -  |\n\n\n### Menu.Item Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onClick | 点击菜单项的时候触发的事件 | itemKey |\n| onDoubleClick | 双击菜单项的时候触发的事件 | - |\n'},90:function(e,n,t){"use strict";t.r(n);var u=t(22),o=t.n(u),r=t(18),i=t.n(r),m=t(19),s=t.n(m),a=t(20),M=t.n(a),l=t(21),c=t.n(l),d=t(172),I=(t(192),function(e){function n(){return i()(this,n),M()(this,(n.__proto__||o()(n)).apply(this,arguments))}return c()(n,e),s()(n,[{key:"document",value:function(){return t(303)}}]),n}(d.a));n.default=I}}]);