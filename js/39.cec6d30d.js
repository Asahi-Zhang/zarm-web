(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{123:function(n,e,t){"use strict";t.r(e);var a=t(24),o=t.n(a),r=t(20),l=t.n(r),i=t(21),d=t.n(i),s=t(22),c=t.n(s),u=t(23),p=t.n(u),h=t(182),m=(t(180),t(276),t(219),t(213),t(378),t(205),t(207),t(282),function(n){function e(){return l()(this,e),c()(this,(e.__proto__||o()(e)).apply(this,arguments))}return p()(e,n),d()(e,[{key:"document",value:function(){return t(380)}}]),e}(h.a));e.default=m},180:function(n,e,t){"use strict";t(72)},182:function(n,e,t){"use strict";var a=t(183),o=t.n(a),r=t(188),l=t.n(r),i=t(189),d=t.n(i),s=t(190),c=t.n(s),u=t(24),p=t.n(u),h=t(20),m=t.n(h),v=t(21),w=t.n(v),x=t(22),S=t.n(x),b=t(23),f=t.n(b),g=t(0),y=t.n(g),C=t(48),k=t.n(C),I=t(181),R=t.n(I),E=t(191),O=t.n(E),j=t(186),_=t.n(j),N=t(25),L=t.n(N),T=t(192),M=t(1),z=t.n(M),A=t(187),D=t.n(A),P=(t(193),t(194),t(195),t(196),t(197),function(n){function e(){return m()(this,e),S()(this,(e.__proto__||p()(e)).apply(this,arguments))}return f()(e,n),w()(e,[{key:"componentDidMount",value:function(){var n=this,e=this.props,t=e.onChange,a=e.value;this.cm=D()(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(a),this.cm.on("changes",function(e){t&&(clearTimeout(n.timeout),n.timeout=setTimeout(function(){t(e.getValue())},300))})}},{key:"render",value:function(){var n=this;return y.a.createElement("div",{className:"editor",ref:function(e){n.editor=e}})}}]),e}(g.Component)),B=P;P.propTypes={onChange:z.a.func,value:z.a.string},P.defaultProps={onChange:function(){},value:""};var U=function(n){function e(n){m()(this,e);var t=S()(this,(e.__proto__||p()(e)).call(this,n));return t.playerElem=null,t.playerId=""+parseInt(1e9*Math.random(),10).toString(36),t.document=t.props.children.match(/([^]*)\n?(```[^]+```)/),t.description=R()(t.document[1]),t.source=t.document[2].match(/```(.*)\n?([^]+)```/),t.state={showBlock:!1},t.blockControl=t.blockControl.bind(t),t}return f()(e,n),w()(e,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.playerElem&&k.a.unmountComponentAtNode(this.playerElem)}},{key:"blockControl",value:function(){this.setState({showBlock:!this.state.showBlock})}},{key:"renderSource",value:function(n){var e=this;Promise.all([t.e(49),t.e(3),t.e(47)]).then(t.bind(null,399)).then(function(n){var t=["context","React","ReactDOM"],a=[e,y.a,k.a];return L()(n).forEach(function(e){t.push(e),a.push(n[e])}),{args:t,argv:a}}).then(function(t){var a=t.args,o=t.argv,r=Object(T.transform)("\n        class Demo extends React.Component {\n          "+n+"\n        }\n\n        if(!window.playerList){\n            window.playerList = [];\n        }\n        const container = document.getElementById('"+e.playerId+"');\n        window.playerList.push(container);\n\n        ReactDOM.render(<Demo {...context.props} />, container)\n      ",{presets:["es2015","react"]}).code;a.push(r),(new(Function.prototype.bind.apply(Function,[null].concat(_()(a))))).apply(void 0,_()(o)),e.source[2]=n}).catch(function(n){0})}},{key:"render",value:function(){var n=this;return y.a.createElement("div",{className:"demo-block demo-box demo-"+this.props.name},y.a.createElement("div",{className:"source",id:this.playerId,ref:function(e){n.playerElem=e}}),this.state.showBlock&&y.a.createElement("div",{className:"meta"},this.description&&y.a.createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:this.description}}),y.a.createElement(B,{value:this.source[2],onChange:function(e){return n.renderSource(e)}})),y.a.createElement("div",{className:"demo-block-control",onClick:this.blockControl},this.state.showBlock?y.a.createElement("span",null,y.a.createElement("i",{className:"el-icon-caret-top"}),"隐藏"):y.a.createElement("span",null,y.a.createElement("i",{className:"el-icon-caret-bottom"}),"展开")))}}]),e}(y.a.Component),H=function(n){function e(n){m()(this,e);var t=S()(this,(e.__proto__||p()(e)).call(this,n));return t.divList=[],t.components=new c.a,t.renderer=new R.a.Renderer,t.renderer.table=function(n,e){return'<table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table>"},t}return f()(e,n),w()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){}},{key:"componentWillUnmount",value:function(){this.divList.forEach(function(n){k.a.unmountComponentAtNode(n),n.parentNode.removeChild(n)}),this.divList=[]}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var a,o=l()(this.components);!(n=(a=o.next()).done);n=!0){var r=a.value,i=d()(r,2),s=i[0],c=i[1],u=document.getElementById(s);this.divList.push(u),u instanceof HTMLElement&&k.a.render(c,u)}}catch(n){e=!0,t=n}finally{try{!n&&o.return&&o.return()}finally{if(e)throw t}}O.a.highlightAll()}},{key:"render",value:function(){var n=this,e=this.document(localStorage.getItem("ELEMENT_LANGUAGE")||"zh-CN");if("string"==typeof e){this.components.clear();var t=R()(e.replace(/:::\s?demo\s?([^]+?):::/g,function(e,t,a){var r=a.toString(36);return n.components.set(r,y.a.createElement(U,o()({name:n.constructor.name.toLowerCase()},n.props),t)),"<div id="+r+"></div>"}),{renderer:this.renderer});return y.a.createElement("div",{dangerouslySetInnerHTML:{__html:t}})}return y.a.createElement("span",null)}}]),e}(y.a.Component);e.a=H},185:function(n,e,t){"use strict";t(180),t(199)},201:function(n,e,t){"use strict";t(180),t(210)},202:function(n,e,t){"use strict";t(180),t(209)},204:function(n,e,t){"use strict";t(180),t(211)},205:function(n,e,t){"use strict";t(216),t(180),t(202),t(201),t(204),t(185),t(217)},207:function(n,e,t){"use strict";t(180),t(226)},213:function(n,e,t){"use strict";t(180),t(222)},219:function(n,e,t){"use strict";t(180),t(220)},220:function(n,e,t){},222:function(n,e,t){},276:function(n,e,t){"use strict";t(180),t(277)},277:function(n,e,t){},282:function(n,e,t){"use strict";t(180),t(283)},283:function(n,e,t){},378:function(n,e,t){},380:function(n,e){n.exports="## Table 表格\n用于展示大量数据。\n\n### 基础用法\n\n:::demo 指定`columns`和`dataSource`属性。\n\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [\n        {\n          id: '1',\n          name: '张三',\n          dept: '直营部',\n          age: 46,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市杨浦区四平路324号',\n            comp: '1xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '2',\n          name: '李四',\n          dept: '健康险事业部',\n          age: 32,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: 'aaaa',\n            comp: '2xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '3',\n          name: '王五',\n          dept: '金融信保部',\n          age: 20,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市浦东区张杨路1400号',\n            comp: '3xxx公司'\n          },\n          state: false\n        },\n        {\n          id: '4',\n          name: '奥巴马',\n          dept: '健康险事业部',\n          age: 45,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '美国洛杉矶',\n            comp: '2xxx公司'\n          },\n          state: false\n        },\n      ],\n    }\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <div>\n        <Table\n          striped\n          // hover\n          bordered\n          dataSource={dataSource}\n          columns={[{\n            dataIndex: 'id',\n            width: 50,\n            render: (value, row, index) => {\n              return index + 1;\n            }\n          },{\n            title: '姓名',\n            dataIndex: 'name',\n            width: 100,\n            render: (value, row, index) => {\n              return <a href=\"javascript:;\">{value}</a>;\n            },\n            sorter: (a, b) => {\n              return a.name.localeCompare(b.name);\n            }\n          },{\n            title: '部门',\n            dataIndex: 'dept',\n            width: 130,\n            render: (value, row, index) => {\n              return (\n                <Select size=\"sm\" value={value} style={{width: 130}}>\n                  <Select.Option value=\"直营部\">直营部</Select.Option>\n                  <Select.Option value=\"健康险事业部\">健康险事业部</Select.Option>\n                  <Select.Option value=\"金融信保部\">金融信保部</Select.Option>\n                  <Select.Option value=\"人力资源部\">人力资源部</Select.Option>\n                </Select>\n              );\n            },\n            sorter: (a, b) => {\n              return a.dept.localeCompare(b.dept);\n            }\n          },{\n            title: '年龄',\n            dataIndex: 'age',\n            width: 80,\n            render: (value, row, index) => {\n              return <Input size=\"sm\" style={{width: 40}} value={value} maxLength=\"3\" onChange={(e) => {\n                let dataSource = this.state.dataSource;\n                dataSource[index].age = e.target.value;\n                this.setState({dataSource});\n              }}/>;\n            },\n            sorter: (a, b) => {\n              return a.age - b.age;\n            }\n          },{\n            title: '家庭住址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.home\n            }\n          },\n          {\n            title: '公司地址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.comp\n            }\n          },{\n            title: '状态',\n            dataIndex: 'state',\n            width: 100,\n            render: (value, row, index) => {\n              return <Switch size=\"sm\" value={value} />;\n            },\n            sorter: (a, b) => {\n              return a.state - b.state;\n            }\n          },{\n            title: '操作',\n            dataIndex: 'op',\n            width: 120,\n            render: (value, row, index) => {\n              return (\n                <div style={{color: '#ccc'}}>\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('编辑')\n                  }}>编辑</a>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('删除')\n                  }}>删除</a>\n                </div>\n              );\n            }\n          }]}\n          rowClick={(row) => {\n            console.log(row);\n          }}\n          rowClassName={(row) => {\n            if(row.age == 46) {\n              return 'bg'\n            }\n          }}\n          rowSelection={{\n            // value: this.state.tableSelection,\n            onSelect: (selected, row, selectedRows) => {\n              console.log(selected, row, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            },\n            onSelectAll: (selected, selectedRows) => {\n              console.log(selected, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            }\n          }}>\n        </Table>\n      </div>\n    )\n  }\n```\n:::\n\n### 固定操作列\n\n:::demo 指定`fixed`属性。\n\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [\n        {\n          id: '1',\n          name: '张三',\n          dept: '直营部',\n          age: 46,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市杨浦区四平路324号上海市杨浦区四平路324号上海市杨浦区四平路324号上海市杨浦区四平路324号',\n            comp: '1xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '2',\n          name: '李四',\n          dept: '健康险事业部',\n          age: 32,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: 'aaaa',\n            comp: '2xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '3',\n          name: '王五',\n          dept: '金融信保部',\n          age: 20,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市浦东区张杨路1400号',\n            comp: '3xxx公司'\n          },\n          state: false\n        },\n        {\n          id: '4',\n          name: '奥巴马',\n          dept: '健康险事业部',\n          age: 45,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '美国洛杉矶',\n            comp: '2xxx公司'\n          },\n          state: false\n        },\n      ],\n    }\n  }\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <div>\n        <Table\n          // striped\n          hover\n          dataSource={dataSource}\n          columns={[{\n            dataIndex: 'id',\n            width: 50,\n            render: (value, row, index) => {\n              return index + 1;\n            }\n          },{\n            title: '姓名',\n            dataIndex: 'name',\n            width: 100,\n            render: (value, row, index) => {\n              return <a href=\"javascript:;\">{value}</a>;\n            },\n            sorter: (a, b) => {\n              return a.name.localeCompare(b.name);\n            }\n          },{\n            title: '部门',\n            dataIndex: 'dept',\n            width: 130,\n            render: (value, row, index) => {\n              return (\n                <Select size=\"sm\" value={value} style={{width: 130}}>\n                  <Select.Option value=\"直营部\">直营部</Select.Option>\n                  <Select.Option value=\"健康险事业部\">健康险事业部</Select.Option>\n                  <Select.Option value=\"金融信保部\">金融信保部</Select.Option>\n                  <Select.Option value=\"人力资源部\">人力资源部</Select.Option>\n                </Select>\n              );\n            },\n            sorter: (a, b) => {\n              return a.dept.localeCompare(b.dept);\n            }\n          },{\n            title: '年龄',\n            dataIndex: 'age',\n            width: 80,\n            render: (value, row, index) => {\n              return <Input size=\"sm\" style={{width: 40}} value={value} maxLength=\"3\" onChange={(e) => {\n                let dataSource = this.state.dataSource;\n                dataSource[index].age = e.target.value;\n                this.setState({dataSource});\n              }}/>;\n            },\n            sorter: (a, b) => {\n              return a.age - b.age;\n            }\n          },{\n            title: '家庭住址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.home\n            }\n          },\n          {\n            title: '公司地址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.comp\n            }\n          },{\n            title: '状态',\n            dataIndex: 'state',\n            width: 100,\n            render: (value, row, index) => {\n              return <Switch size=\"sm\" value={value} />;\n            },\n            sorter: (a, b) => {\n              return a.state - b.state;\n            }\n          },{\n            title: '操作',\n            dataIndex: 'op',\n            fixed: 'right',\n            width: 120,\n            render: (value, row, index) => {\n              return (\n                <div style={{color: '#ccc'}}>\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('编辑')\n                  }}>编辑</a>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('删除')\n                  }}>删除</a>\n                </div>\n              );\n            }\n          }]}\n          rowClick={(row) => {\n            console.log(row);\n          }}\n          rowClassName={(row) => {\n            if(row.age == 46) {\n              return 'bg'\n            }\n          }}\n          rowSelection={{\n            fixed: true,\n            onSelect: (selected, row, selectedRows) => {\n              console.log(selected, row, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            },\n            onSelectAll: (selected, selectedRows) => {\n              console.log(selected, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            }\n          }}>\n        </Table>\n      </div>\n    )\n  }\n```\n:::\n\n### 表头分组和单元格合并\n\n:::demo\n\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [\n        {\n          id: '1',\n          name: '张三',\n          dept: '直营部',\n          age: 46,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市杨浦区四平路324号',\n            comp: '1xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '2',\n          name: '李四',\n          dept: '健康险事业部',\n          age: 32,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: 'aaaa',\n            comp: '2xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '3',\n          name: '王五',\n          dept: '金融信保部',\n          age: 20,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市浦东区张杨路1400号',\n            comp: '3xxx公司'\n          },\n          state: false\n        },\n        {\n          id: '4',\n          name: '奥巴马',\n          dept: '健康险事业部',\n          age: 45,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '美国洛杉矶',\n            comp: '2xxx公司'\n          },\n          state: false\n        },\n      ],\n    }\n  }\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <div>\n        <Table\n          // hover\n          bordered\n          dataSource={dataSource}\n          columns={[{\n            dataIndex: 'id',\n            width: 50,\n            render: (value, row, index) => {\n              return index + 1;\n            }\n          },{\n            title: '姓名',\n            dataIndex: 'name',\n            width: 100,\n            render: (value, row, index) => {\n              return <a href=\"javascript:;\">{value}</a>; \n            },\n            sorter: (a, b) => {\n              return a.name.localeCompare(b.name);\n            }\n          },{\n            title: '联系方式',\n            dataIndex: 'contact',\n            children: [\n              {\n                title: '手机',\n                dataIndex: 'mobile',\n                children: [\n                  {\n                    title: 'iphone',\n                    dataIndex: 'iphone',\n                    render: (value, row, index) => {\n                      {/* colSpan例子 */}\n                      if (index === 1) {\n                        return {\n                          value,\n                          colSpan: 2\n                        }\n                      }\n                      return value;\n                    }\n                  },\n                  {\n                    title: 'android',\n                    dataIndex: 'android',\n                    render: (value, row, index) => {\n                      {/* colSpan例子 */}\n                      if (index === 1) {\n                        return {\n                          colSpan: 0\n                        }\n                      }\n                      return value;\n                    }\n                  }\n                ]\n              },\n              {\n                title: '固话',\n                dataIndex: 'tel'\n              }\n            ]\n          },{\n            title: '家庭住址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              {/* rowSpan例子 */}\n              if (index === 1) {\n                return {\n                  value: value.home,\n                  rowSpan: 2\n                }\n              }\n              if (index === 2) {\n                return {\n                  rowSpan: 0\n                }\n              }\n              return value.home\n            }\n          },\n          {\n            title: '公司地址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.comp\n            }\n          },{\n            title: '状态',\n            dataIndex: 'state',\n            width: 100,\n            render: (value, row, index) => {\n              return <Switch size=\"sm\" value={value} />;\n            },\n            sorter: (a, b) => {\n              return a.state - b.state;\n            }\n          },{\n            title: '操作',\n            dataIndex: 'op',\n            width: 120,\n            render: (value, row, index) => {\n              return (\n                <div style={{color: '#ccc'}}>\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('编辑');\n                  }}>编辑</a>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('删除');\n                  }}>删除</a>\n                </div>\n              );\n            }\n          }]}\n          rowClick={(row) => {\n            console.log(row);\n          }}\n          rowSelection={{\n            // value: this.state.tableSelection,\n            onSelect: (selected, row, selectedRows) => {\n              console.log(selected, row, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            },\n            onSelectAll: (selected, selectedRows) => {\n              console.log(selected, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            }\n          }}>\n        </Table>\n      </div>\n    )\n  }\n```\n:::\n\n\n### 可展开行\n\n:::demo 指定`columns`和`dataSource`属性。\n\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [\n        {\n          id: '1',\n          name: '张三',\n          dept: '直营部',\n          age: 46,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市杨浦区四平路324号',\n            comp: '1xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '2',\n          name: '李四',\n          dept: '健康险事业部',\n          age: 32,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: 'aaaa',\n            comp: '2xxx公司'\n          },\n          state: true\n        },\n        {\n          id: '3',\n          name: '王五',\n          dept: '金融信保部',\n          age: 20,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '上海市浦东区张杨路1400号',\n            comp: '3xxx公司'\n          },\n          state: false\n        },\n        {\n          id: '4',\n          name: '奥巴马',\n          dept: '健康险事业部',\n          age: 45,\n          iphone: '15617283931',\n          android: '15617283930',\n          tel: '23412341231',\n          address: {\n            home: '美国洛杉矶',\n            comp: '2xxx公司'\n          },\n          state: false\n        },\n      ],\n    }\n  }\n\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <div>\n        <Table\n          // bordered\n          hover\n          onExpand={(expanded, row) => {\n            console.log(expanded);\n            console.log(row);\n          }}\n          expandedRowRender={(row, index) => {\n            return (\n              <div style={{ width: 600 }}>\n                <div>第 {index + 1} 行数据：</div>\n                <div><pre>{JSON.stringify(row)}</pre></div>\n              </div>\n            );\n          }}\n          expandedRowKeys={[0]}\n          dataSource={dataSource}\n          columns={[{\n            dataIndex: 'id',\n            width: 50,\n            render: (value, row, index) => {\n              return index + 1;\n            }\n          },{\n            title: '姓名',\n            dataIndex: 'name',\n            width: 100,\n            render: (value, row, index) => {\n              return <a href=\"javascript:;\">{value}</a>;\n            },\n            sorter: (a, b) => {\n              return a.name.localeCompare(b.name);\n            }\n          },{\n            title: '部门',\n            dataIndex: 'dept',\n            width: 130,\n            render: (value, row, index) => {\n              return (\n                <Select size=\"sm\" value={value} style={{width: 130}}>\n                  <Select.Option value=\"直营部\">直营部</Select.Option>\n                  <Select.Option value=\"健康险事业部\">健康险事业部</Select.Option>\n                  <Select.Option value=\"金融信保部\">金融信保部</Select.Option>\n                  <Select.Option value=\"人力资源部\">人力资源部</Select.Option>\n                </Select>\n              );\n            },\n            sorter: (a, b) => {\n              return a.dept.localeCompare(b.dept);\n            }\n          },{\n            title: '年龄',\n            dataIndex: 'age',\n            width: 80,\n            render: (value, row, index) => {\n              return <Input size=\"sm\" style={{width: 40}} value={value} maxLength=\"3\" onChange={(e) => {\n                let dataSource = this.state.dataSource;\n                dataSource[index].age = e.target.value;\n                this.setState({dataSource});\n              }}/>;\n            },\n            sorter: (a, b) => {\n              return a.age - b.age;\n            }\n          },{\n            title: '家庭住址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.home\n            }\n          },\n          {\n            title: '公司地址',\n            dataIndex: 'address',\n            render: (value, row, index) => {\n              return value.comp\n            }\n          },{\n            title: '状态',\n            dataIndex: 'state',\n            width: 100,\n            render: (value, row, index) => {\n              return <Switch size=\"sm\" value={value} />;\n            },\n            sorter: (a, b) => {\n              return a.state - b.state;\n            }\n          },{\n            title: '操作',\n            dataIndex: 'op',\n            width: 120,\n            render: (value, row, index) => {\n              return (\n                <div style={{color: '#ccc'}}>\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('编辑')\n                  }}>编辑</a>\n                  &nbsp;&nbsp;|&nbsp;&nbsp;\n                  <a href=\"javascript:;\" onClick={(e) => {\n                    e.stopPropagation();  //避免触发rowClick事件\n                    alert('删除')\n                  }}>删除</a>\n                </div>\n              );\n            }\n          }]}\n          rowClick={(row) => {\n            console.log(row);\n          }}\n          rowSelection={{\n            // value: this.state.tableSelection,\n            onSelect: (selected, row, selectedRows) => {\n              console.log(selected, row, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            },\n            onSelectAll: (selected, selectedRows) => {\n              console.log(selected, selectedRows);\n              let tableSelection = this.state.tableSelection;\n              tableSelection = selectedRows;\n              this.setState({tableSelection});\n            }\n          }}>\n        </Table>\n      </div>\n    )\n  }\n```\n:::\n\n\n### Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| columns   |  表格字段  | object[] |   -  |    []  |\n| dataSource  |  表格数据  | object[] |   -  |    []  |\n| bordered   |  是否带边框  | boolean |   -  |    false |\n| radius   |  是否圆角  | boolean |   -  |    false  |\n| striped   |  是否间隔变色  | boolean |   -  |    false  |\n| isLoading   |  是否加载中  | boolean |   -  |    false  |\n| maxCellSize   |  单元格最多显示字符数，超过显示...  | number |   -  |    20  |\n| rowSelection  |  选中行配置 | object |   -  |    -  |\n| defaultExpandAllRows  | 是否展开所有行 | boolean |   -  |    false  |\n| defaultExpandedRowKeys  | 默认展开所有行 | string[] / number[] |   -  |    -  |\n| expandedRowKeys  | 展开的行，控制属性 | string[] / number[] |   -  |    -  |\n| expandedRowRender  | 展开行渲染函数 | (row, index) => ReactNode |   -  |    -  |\n| rowClassName  | 筛选行添加样式 | (row) => string |   -  |    -  |\n\n### Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| rowClick | 点击row触发的事件 |  row |\n| onExpand | 点击展开行icon触发的事件 |  (expanded, row) |"}}]);