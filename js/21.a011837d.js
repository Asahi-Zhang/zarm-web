(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{169:function(n,e,t){"use strict";var o=t(170),i=t.n(o),r=t(174),a=t.n(r),s=t(175),c=t.n(s),u=t(176),l=t.n(u),d=t(22),m=t.n(d),h=t(18),p=t.n(h),f=t(19),v=t.n(f),g=t(20),y=t.n(g),k=t(21),b=t.n(k),C=t(0),E=t.n(C),N=t(43),B=t.n(N),w=t(168),_=t.n(w),M=t(177),D=t.n(M),I=t(173),S=t.n(I),x=t(23),L=t.n(x),O=t(178),R=t(1),T=t.n(R),j=t(172),A=t.n(j),H=(t(179),t(180),t(181),t(182),function(n){function e(){return p()(this,e),y()(this,(e.__proto__||m()(e)).apply(this,arguments))}return b()(e,n),v()(e,[{key:"componentDidMount",value:function(){var n=this,e=this.props,t=e.onChange,o=e.value;this.cm=A()(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(o),this.cm.on("changes",function(e){t&&(clearTimeout(n.timeout),n.timeout=setTimeout(function(){t(e.getValue())},300))})}},{key:"render",value:function(){var n=this;return E.a.createElement("div",{className:"editor",ref:function(e){n.editor=e}})}}]),e}(C.Component)),U=H;H.propTypes={onChange:T.a.func,value:T.a.string},H.defaultProps={onChange:function(){},value:""};var F=function(n){function e(n){p()(this,e);var t=y()(this,(e.__proto__||m()(e)).call(this,n));return t.playerId=""+parseInt(1e9*Math.random(),10).toString(36),t.document=t.props.children.match(/([^]*)\n?(```[^]+```)/),t.description=_()(t.document[1]),t.source=t.document[2].match(/```(.*)\n?([^]+)```/),t.state={showBlock:!1},t.blockControl=t.blockControl.bind(t),t}return b()(e,n),v()(e,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.containerElem&&B.a.unmountComponentAtNode(this.containerElem)}},{key:"blockControl",value:function(){this.setState({showBlock:!this.state.showBlock})}},{key:"renderSource",value:function(n){var e=this;Promise.all([t.e(44),t.e(42)]).then(t.bind(null,317)).then(function(n){var t=["context","React","ReactDOM"],o=[e,E.a,B.a];return L()(n).forEach(function(e){t.push(e),o.push(n[e])}),{args:t,argv:o}}).then(function(t){var o=t.args,i=t.argv,r=Object(O.transform)("\n        class Demo extends React.Component {\n          "+n+"\n        }\n\n        ReactDOM.render(<Demo {...context.props} />, document.getElementById('"+e.playerId+"'))\n      ",{presets:["es2015","react"]}).code;o.push(r),(new(Function.prototype.bind.apply(Function,[null].concat(S()(o))))).apply(void 0,S()(i)),e.source[2]=n}).catch(function(n){0})}},{key:"render",value:function(){var n=this;return E.a.createElement("div",{className:"demo-block demo-box demo-"+this.props.name},E.a.createElement("div",{className:"source",id:this.playerId,ref:function(e){n.containerElem=e}}),this.state.showBlock&&E.a.createElement("div",{className:"meta"},this.description&&E.a.createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:this.description}}),E.a.createElement(U,{value:this.source[2],onChange:function(e){return n.renderSource(e)}})),E.a.createElement("div",{className:"demo-block-control",onClick:this.blockControl},this.state.showBlock?E.a.createElement("span",null,E.a.createElement("i",{className:"el-icon-caret-top"}),"隐藏"):E.a.createElement("span",null,E.a.createElement("i",{className:"el-icon-caret-bottom"}),"展开")))}}]),e}(E.a.Component),J=function(n){function e(n){p()(this,e);var t=y()(this,(e.__proto__||m()(e)).call(this,n));return t.nodeList=[],t.components=new l.a,t.renderer=new _.a.Renderer,t.renderer.table=function(n,e){return'<table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table>"},t}return b()(e,n),v()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){B.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var o,i=a()(this.components);!(n=(o=i.next()).done);n=!0){var r=o.value,s=c()(r,2),u=s[0],l=s[1],d=document.getElementById(u);this.nodeList.push(d),d instanceof HTMLElement&&B.a.render(l,d)}}catch(n){e=!0,t=n}finally{try{!n&&i.return&&i.return()}finally{if(e)throw t}}D.a.highlightAll()}},{key:"render",value:function(){var n=this,e=this.document();if("string"==typeof e){this.components.clear();var t=_()(e.replace(/:::\s?demo\s?([^]+?):::/g,function(e,t,o){var r=o.toString(36);return n.components.set(r,E.a.createElement(F,i()({name:n.constructor.name.toLowerCase()},n.props),t)),"<div id="+r+"></div>"}),{renderer:this.renderer});return E.a.createElement("div",{dangerouslySetInnerHTML:{__html:t}})}return E.a.createElement("span",null)}}]),e}(E.a.Component);e.a=J},259:function(n,e){n.exports="## Notification 提示框\n\n悬浮出现在页面右上角, 适合复杂类型或者系统主动推送的消息通知提示。\n\n### 基本用法\n\n适用性广泛的通知栏\n\n::: demo 设置是否自动关闭\n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open.bind(this)}>可自动关闭</Button>\n      <Button onClick={this.open2.bind(this)}>不会自动关闭</Button>\n    </div>\n  )\n}\n\nopen() {\n  Notification({\n    title: '标题名称',\n    message: '这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案'\n  });\n}\n\nopen2() {\n  Notification({\n    title: '提示',\n    message: '这是一条不会自动关闭的消息',\n    duration: 0\n  });\n}\n```\n:::\n\n### 带有图标\n\n带有 icon，常用来显示「成功、警告、消息、错误」类的系统消息\n\n::: demo Notification 组件有四种通知类型：`success`, `warning`, `info`, `error`。通过`type`字段来设置\n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open3.bind(this)}>成功</Button>\n      <Button onClick={this.open4.bind(this)}>警告</Button>\n      <Button onClick={this.open5.bind(this)}>消息</Button>\n      <Button onClick={this.open6.bind(this)}>错误</Button>\n    </div>\n  )\n}\n\nopen3() {\n  Notification({\n    title: '成功',\n    message: '这是一条成功的提示消息',\n    type: 'success',\n    duration: 0\n  });\n}\n\nopen4() {\n  Notification({\n    title: '警告',\n    message: '这是一条警告的提示消息',\n    type: 'warning'\n  });\n}\n\nopen5() {\n  Notification.info({\n    title: '消息',\n    message: '这是一条消息的提示消息'\n  });\n}\n\nopen6() {\n  Notification.error({\n    title: '错误',\n    message: '这是一条错误的提示消息'\n  });\n}\n```\n:::\n\n### 回调函数\n::: demo 点击notification的回调函数\n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open.bind(this)}>点击我</Button>\n    </div>\n  )\n}\n\nopen() {\n  Notification({\n    title: '点击',\n    message: '这是一条成功的提示消息',\n    type: 'success',\n    onClick () {alert('click')}\n  });\n}\n```\n:::\n\n### 参数\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| title | 标题 | string | — | — |\n| message | 说明文字 | string/ReactElement | — | — |\n| className | 自定义类名 | string | - | - |\n| type | 图标主题，只能为列举的四种之一，否则无效 | string | success/warning/info/error | — |\n| duration | 显示时间, 毫秒。设为 0 则不会自动关闭 | number | — | 4500 |\n| onClick | 点击 Notification 时的回调函数 | function | — | — |\n\n\n\n"},98:function(n,e,t){"use strict";t.r(e);var o=t(22),i=t.n(o),r=t(18),a=t.n(r),s=t(19),c=t.n(s),u=t(20),l=t.n(u),d=t(21),m=t.n(d),h=function(n){function e(){return a()(this,e),l()(this,(e.__proto__||i()(e)).apply(this,arguments))}return m()(e,n),c()(e,[{key:"document",value:function(){return t(259)}}]),e}(t(169).a);e.default=h}}]);