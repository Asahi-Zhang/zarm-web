webpackJsonp([15],{156:function(n,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=a(65),t=a.n(o),i=a(66),d=a.n(i),r=a(67),u=a.n(r),s=a(68),l=a.n(s),v=a(69),R=a.n(v),c=a(269),h=(a(497),function(n){function e(){return d()(this,e),l()(this,(e.__proto__||t()(e)).apply(this,arguments))}return R()(e,n),u()(e,[{key:"document",value:function(){return a(499)}}]),e}(c.a));e.default=h},497:function(n,e,a){"use strict";var o=a(498);a.n(o)},498:function(n,e){},499:function(n,e){n.exports='## Radio 单选框\n单选框。\n\n### 基础用法\n\n单独使用，表示在两种状态之间切换。\n\n:::demo\n\n```js\n  onChange(e) {\n    console.log(e.target.value);\n  }\n  render() {\n    return (\n      <div>\n        <Radio\n          value="a"\n          onChange={(e) => this.onChange(e)}\n        >\n          选择\n        </Radio>\n      </div>\n    )\n  }\n```\n:::\n\n### 组合使用\n\n一组可选项中选择一项。\n\n:::demo 使用`Radio.Group`组件。\n\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      radioValue: \'a\'\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div style={{marginBottom: 8}}>选择了：{this.state.radioValue}</div>\n        <Radio.Group\n          value={this.state.radioValue}\n          onChange={(e) => {\n            this.setState({\n              radioValue: e.target.value\n            });\n          }}\n        >\n          <Radio value="a">A</Radio>\n          <Radio value="b">B</Radio>\n          <Radio value="c">C</Radio>\n          <Radio value="d">D</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n```\n:::\n\n### 禁用状态\n\n不可勾选状态。\n\n:::demo 可以使用`disabled`属性来定义是否可用。\n\n```js\n  render() {\n    return (\n      <div>\n        <Radio\n          disabled\n          onChange={(e) => this.onChange(e)}\n        >\n          选择\n        </Radio>\n      </div>\n    )\n  }\n```\n:::\n\n\n### Radio Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| checked     | 是否选中  | boolean  |   -           |    false    |\n| defaultChecked    | 默认选中  | boolean   |   - |     false   |\n| disabled  | 是否禁用    | boolean   | true, false   | false   |\n| value  | 选择框对应的值    | string   | -  | -   |\n\n### Radio Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onChange | 勾选状态变化触发的事件 | event |\n\n### Radio.Group Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| value     | 选中的值  | string  |   -           |    false    |\n| defaultValue    | 默认选中的值  | string  |   - |     false   |\n\n### Radio.Group Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onChange | 勾选状态变化触发的事件 | event |'}});