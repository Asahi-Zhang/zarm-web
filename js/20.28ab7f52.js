webpackJsonp([20],{147:function(n,s,t){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var e=t(65),o=t.n(e),r=t(66),i=t.n(r),u=t(67),m=t.n(u),a=t(68),h=t.n(a),c=t(69),g=t.n(c),p=t(269),f=(t(476),t(272),function(n){function s(){return i()(this,s),h()(this,(s.__proto__||o()(s)).apply(this,arguments))}return g()(s,n),m()(s,[{key:"document",value:function(){return t(478)}}]),s}(p.a));s.default=f},476:function(n,s,t){"use strict";var e=t(477);t.n(e),t(273)},477:function(n,s){},478:function(n,s){n.exports="## Message 全局提示\n\n全局展示操作反馈信息。\n\n### 使用方法\n\n顶部居中显示并自动消失。\n\n:::demo 通过`type`属性输入类型。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: []\n    }\n  }\n  showMessage() {\n    const { msg } = this.state;\n    this.setState({\n      msg: [\n        ...msg,\n        {\n          m: '提交成功'\n        }\n      ]\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Button theme=\"info\" onClick={() => this.showMessage()}>提示</Button>\n        <Message msg={this.state.msg} theme=\"info\"/>\n      </div>\n    )\n  }\n```\n:::\n\n### 五种主题\n\n通过`theme`设置。\n\n:::demo 支持`info`,`success`,`warning`,`error`四种主题，默认`info`。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: [],\n      theme: 'info'\n    }\n  }\n  showMessage(m, theme) {\n    const { msg } = this.state;\n    this.setState({\n      msg: [\n        ...msg,\n        {\n          m,\n        }\n      ],\n      theme\n    })\n  }\n  render() {\n    const { msg, theme } = this.state;\n    return (\n      <div>\n        <Button theme=\"info\" onClick={() => this.showMessage('info提示', 'info')}>info提示</Button>\n        <Button theme=\"success\" onClick={() => this.showMessage('success提示', 'success')}>success提示</Button>\n        <Button theme=\"warning\" onClick={() => this.showMessage('warning提示', 'warning')}>warning提示</Button>\n        <Button theme=\"error\" onClick={() => this.showMessage('error提示', 'error')}>error提示</Button>\n        <Message msg={msg} theme={theme}/>\n      </div>\n    )\n  }\n```\n:::\n\n### 自定义时长\n\n通过`duration`设置显示时长。\n\n:::demo 通过`radius`属性设置输入框是否圆角。\n```js\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: []\n    }\n  }\n  showMessage() {\n    const { msg } = this.state;\n    this.setState({\n      msg: [\n        ...msg,\n        {\n          m: '提交成功'\n        }\n      ]\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Button theme=\"info\" onClick={() => this.showMessage()}>提示5s</Button>\n        <Message msg={this.state.msg} theme=\"info\" duration={5000} />\n      </div>\n    )\n  }\n```\n:::\n\n\n### Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| msg    | 消息对象数组 [{ m, duration }] | array  |      -        |    []    |\n| theme     | 主题   | string  |   info, success, warning, error        |    info    |\n| duration     | 显示时长(ms) | number  |   -     |    1500    |\n"}});