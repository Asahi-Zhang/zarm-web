webpackJsonp([19],{149:function(n,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var e=i(65),o=i.n(e),s=i(66),c=i.n(s),r=i(67),u=i.n(r),a=i(68),l=i.n(a),p=i(69),d=i.n(p),f=i(269),h=(i(480),i(272),i(273),function(n){function t(){return c()(this,t),l()(this,(t.__proto__||o()(t)).apply(this,arguments))}return d()(t,n),u()(t,[{key:"document",value:function(){return i(482)}}]),t}(f.a));t.default=h},480:function(n,t,i){"use strict";var e=i(481);i.n(e)},481:function(n,t){},482:function(n,t){n.exports="## Notification 提示框\n\n悬浮出现在页面右上角, 适合复杂类型或者系统主动推送的消息通知提示。\n\n### 基本用法\n\n适用性广泛的通知栏\n\n::: demo 设置是否自动关闭\n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open.bind(this)}>可自动关闭</Button>\n      <Button onClick={this.open2.bind(this)}>不会自动关闭</Button>\n    </div>\n  )\n}\n\nopen() {\n  Notification({\n    title: '标题名称',\n    message: '这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案'\n  });\n}\n\nopen2() {\n  Notification({\n    title: '提示',\n    message: '这是一条不会自动关闭的消息',\n    duration: 0\n  });\n}\n```\n:::\n\n### 带有图标\n\n带有 icon，常用来显示「成功、警告、消息、错误」类的系统消息\n\n::: demo Notification 组件有四种通知类型：`success`, `warning`, `info`, `error`。通过`type`字段来设置\n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open3.bind(this)}>成功</Button>\n      <Button onClick={this.open4.bind(this)}>警告</Button>\n      <Button onClick={this.open5.bind(this)}>消息</Button>\n      <Button onClick={this.open6.bind(this)}>错误</Button>\n    </div>\n  )\n}\n\nopen3() {\n  Notification({\n    title: '成功',\n    message: '这是一条成功的提示消息',\n    type: 'success'\n  });\n}\n\nopen4() {\n  Notification({\n    title: '警告',\n    message: '这是一条警告的提示消息',\n    type: 'warning'\n  });\n}\n\nopen5() {\n  Notification.info({\n    title: '消息',\n    message: '这是一条消息的提示消息'\n  });\n}\n\nopen6() {\n  Notification.error({\n    title: '错误',\n    message: '这是一条错误的提示消息'\n  });\n}\n```\n:::\n\n### 回调函数\n::: demo 点击notification的回调函数\n```js\nrender() {\n  return (\n    <div>\n      <Button onClick={this.open.bind(this)}>点击我</Button>\n    </div>\n  )\n}\n\nopen() {\n  Notification({\n    title: '点击',\n    message: '这是一条成功的提示消息',\n    type: 'success',\n    onClick () {alert('click')}\n  });\n}\n```\n:::\n\n### 参数\n| 参数      | 说明          | 类型      | 可选值                           | 默认值  |\n|---------- |-------------- |---------- |--------------------------------  |-------- |\n| title | 标题 | string | — | — |\n| message | 说明文字 | string/ReactElement | — | — |\n| className | 自定义类名 | string | - | - |\n| type | 图标主题，只能为列举的四种之一，否则无效 | string | success/warning/info/error | — |\n| duration | 显示时间, 毫秒。设为 0 则不会自动关闭 | number | — | 4500 |\n| onClick | 点击 Notification 时的回调函数 | function | — | — |\n\n\n\n"}});