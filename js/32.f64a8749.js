webpackJsonp([32],{134:function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=e(65),u=e.n(o),r=e(66),s=e.n(r),i=e(67),d=e.n(i),B=e(68),a=e.n(B),l=e(69),m=e.n(l),c=e(265),f=(e(267),e(270),function(n){function t(){return s()(this,t),a()(this,(t.__proto__||u()(t)).apply(this,arguments))}return m()(t,n),d()(t,[{key:"document",value:function(){return e(428)}}]),t}(c.a));t.default=f},428:function(n,t){n.exports='## Button 按钮\n常用的操作按钮。\n\n### 基础用法\n\n五种主题。\n\n:::demo Button 组件提供5种主题，由`theme`属性来定义，默认为`default`。\n\n```js\n  render() {\n    return (\n      <div>\n        <Button>default</Button>\n        <Button theme="info">info</Button>\n        <Button theme="success">success</Button>\n        <Button theme="warning">warning</Button>\n        <Button theme="error">error</Button>\n      </div>\n    )\n  }\n```\n:::\n\n### 禁用状态\n\n按钮不可用状态。\n\n:::demo 可以使用`disabled`属性来定义按钮是否可用。\n\n```js\n  render() {\n    return (\n      <div>\n        <Button disabled>默认按钮</Button>\n        <Button theme="info" disabled>info</Button>\n        <Button theme="success" disabled>success</Button>\n        <Button theme="warning" disabled>warning</Button>\n        <Button theme="error" disabled>error</Button>\n      </div>\n    )\n  }\n```\n:::\n\n### 圆角按钮\n\n可以设置圆角或椭圆角的按钮\n\n:::demo 使用`radius`，`round`属性设置圆角、椭圆角\n\n```js\n  render() {\n    return (\n      <div>\n        <div className="multi-rows">\n          <Button radius>default</Button>\n          <Button radius theme="info">info</Button>\n          <Button radius theme="success">success</Button>\n          <Button radius theme="warning">warning</Button>\n          <Button radius theme="error">error</Button>\n        </div>\n        <div className="multi-rows">\n          <Button round>default</Button>\n          <Button round theme="info">info</Button>\n          <Button round theme="success">success</Button>\n          <Button round theme="warning">warning</Button>\n          <Button round theme="error">error</Button>\n        </div>\n      </div>\n    )\n  }\n```\n:::\n\n### 不同尺寸\n\n除了默认尺寸外，可以额外设置四种尺寸。\n\n:::demo 额外的尺寸：`xl`、`lg`、`sm`，`xs`，通过设置`size`属性来配置它们。\n\n```js\n  render() {\n    return (\n      <div>\n        <Button size=\'xl\' theme="info">xl尺寸</Button>\n        <Button size=\'lg\' theme="info">lg尺寸</Button>\n        <Button theme="info">默认尺寸</Button>\n        <Button size=\'sm\' theme="info">sm尺寸</Button>\n        <Button size=\'xs\' theme="info">xs尺寸</Button>\n      </div>\n    )\n  }\n```\n:::\n\n### 图标按钮\n\n使用Icon组件添加图标\n\n:::demo 可以在组件中通过Icon的方式添加图标\n\n```js\n  render() {\n    return (\n      <div>\n        <Button theme="info"><Icon type="right" />完成上传</Button>\n        <Button theme="error"><Icon type="wrong" />上传出错了</Button>\n      </div>\n    )\n  }\n```\n:::\n\n### 加载中\n\n点击按钮后进行数据加载操作，在按钮上显示加载状态。\n\n:::demo 只要设置`loading`属性为`true`。\n\n```js\n  render() {\n    return <Button theme="info" loading={true}>加载中</Button>\n  }\n```\n:::\n\n### Attributes\n| 参数      | 说明    | 类型      | 可选值       | 默认值   |\n|---------- |-------- |---------- |-------------  |-------- |\n| size     | 尺寸   | string  |   xl,lg,sm,xs            |    —     |\n| theme     | 主题   | string    |   info,success,warning,error,default |     default   |\n| radius     | 是否圆角   | boolean    | — | false   |\n| round     | 是否椭圆角   | boolean    | — | false   |\n| circle     | 是否圆形   | boolean    | — | false   |\n| loading     | 是否加载中状态   | boolean    | — | false   |\n| disabled  | 是否禁用    | boolean   | true, false   | false   |\n\n### Events\n| 事件名称 | 说明 | 回调参数 |\n|---------- |-------- |---------- |\n| onClick | 点击按钮触发的事件 | — |'}});