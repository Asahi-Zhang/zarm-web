@import '../../style/themes/variable';
@import '../../style/core/index';

:root {
  --tag-height-lg: 32px;
  --tag-height-md: 28px;
  --tag-height-sm: 24px;
  --tag-height-xs: 20px;
  --tag-padding-h-lg: 16px;
  --tag-padding-h: 12px;
  --tag-font-size: 12px;
  --tag-icon-size-lg: 14px;
  --tag-icon-size: 12px;
  --tag-icon-size-xs: 10px;
  --tag-color-disabled: var(--color-text-disabled);
  --tag-disabled-opacity: var(--opacity-disabled);
  --tag-default-background: #f9f9f9;
  --tag-default-color: #616161;
  --tag-default-border: var(--border-color);
  --tag-primary-color: var(--theme-primary);
  --tag-success-color: var(--theme-success);
  --tag-warning-color: var(--theme-warning);
  --tag-danger-color: var(--theme-danger);
  --tag-color-green: 0, 188, 112;
  --tag-color-blue: 84, 192, 232;
  --tag-color-orange: 236, 145, 49;
  --tag-color-red: 255, 80, 80;
}

@mixin tag-color($color) {
  background-color: rgba($color, 0.05);
  border-color: rgba($color, 0.3);
  color: rgba($color, 1);

  &.zw-tag--unborder {
    color: #fff;
    background-color: rgba($color, 1);
    border: hidden;
  }
}

@mixin color-reverser($color) {
  color: #fff;
  background-color: rgba($color, 1);
  border-color: rgba($color, 1);
}

@mixin tag-size($height, $padding, $icon-size) {
  padding: 0 $padding;
  font-size: var(--tag-font-size);
  height: $height;
  line-height: $height;

  @include b(icon) {
    font-size: $icon-size;
  }
}

@mixin tag-base {
  display: inline-block;
  position: relative;
  transition: all .3s cubic-bezier(.78, .14, .15, .86);
  vertical-align: middle;
  overflow: hidden;
  white-space: nowrap;
  text-align: center;
  font-size: var(--tag-font-size);
  border-width: 1px;
  border-style: solid;
  background-color: var(--tag-default-background);
  border-color: var(--tag-default-border);
  color: var(--tag-default-color);
  margin: 0 8px 8px 0;
  border-radius: var(--radius-md);
  cursor: pointer;

  &.zw-tag--unborder {
    border: hidden;
  }

  & > .za-icon-wrong {
    margin-left: 8px;
    cursor: pointer;
  }
}

@include b(tag) {
  @include tag-base();

  &:hover {
    background-color: rgba(var(--tag-default-background), 0.5);
  }

  &--rect {
    border-radius: 0;
  }

  &--round {
    border-radius: var(--tag-height-lg);
  }

  &--unborder {
    border: hidden;
  }

  /* tag sizes: default md */
  @include tag-size(var(--tag-height-md), var(--tag-padding-h), var(--tag-icon-size));

  @include m(lg) {
    @include tag-size(var(--tag-height-lg), var(--tag-padding-h-lg), var(--tag-icon-size-lg));
  }

  @include m(md) {
    @include tag-size(var(--tag-height-md), var(--tag-padding-h), var(--tag-icon-size));
  }

  @include m(sm) {
    @include tag-size(var(--tag-height-sm), var(--tag-padding-h), var(--tag-icon-size));
  }

  @include m(xs) {
    @include tag-size(var(--tag-height-xs), var(--tag-padding-h), var(--tag-icon-size-xs));
  }

  /* tag preset color */
  @include m(green) {
    @include tag-color(var(--tag-color-green));
  }

  @include m(blue) {
    @include tag-color(var(--tag-color-blue));
  }

  @include m(orange) {
    @include tag-color(var(--tag-color-orange));
  }

  @include m(red) {
    @include tag-color(var(--tag-color-red));
  }

  @include m(checked) {
    background-color: var(--tag-primary-color);
    border-color: var(--tag-primary-color);
    color: var(--tag-default-background);

    &:hover {
      background-color: var(--tag-primary-color);
      color: var(--tag-default-background);
    }
  }

  @include m(disabled) {
    cursor: not-allowed;
    opacity: var(--tag-disabled-opacity);
    box-shadow: none;
    background-color: var(--tag-default-background);
    border-color: var(--tag-default-border);
    color: var(--tag-color-disabled);

    &:hover {
      background-color: var(--tag-default-background);
      color: var(--tag-color-disabled);
    }
  }
}
